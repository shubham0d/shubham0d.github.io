<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="//purl.org/dc/elements/1.1/" xmlns:content="//purl.org/rss/1.0/modules/content/" xmlns:atom="//www.w3.org/2005/Atom" version="2.0" xmlns:media="//search.yahoo.com/mrss/"><channel><title><![CDATA[Shubham Dubey - Linuxed and reversed ]]></title><description><![CDATA[How-to's, Investigations, Reversing and nifty hacks]]></description><link>https://shubham0d.github.io/</link><image><url>https://shubham0d.github.io/favicon.png</url><title>Shubham Dubey - Linuxed and reversed </title><link>https://shubham0d.github.io/</link></image><generator>Ghost 1.19</generator><lastBuildDate>Wed, 27 Dec 2017 15:15:45 GMT</lastBuildDate><atom:link href="https://shubham0d.github.io/author/shubham0d/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Finding file information using different methods]]></title><description><![CDATA[Information about files content can be found using different methods in both windows and linux systems. This knowledge can be handy if you are developing a program or script that is dealing with files.]]></description><link>https://shubham0d.github.io/finding-file-information-using-different-methods/</link><guid isPermaLink="false">5a43858e98308b0f6c141754</guid><category><![CDATA[Tutorial]]></category><category><![CDATA[Analysis]]></category><category><![CDATA[Linux]]></category><dc:creator><![CDATA[Shubham Dubey]]></dc:creator><pubDate>Wed, 27 Dec 2017 12:06:35 GMT</pubDate><media:content url="https://shubham0d.github.io/content/images/2017/12/file-types-.png.jpeg" medium="image"/><content:encoded><![CDATA[<div class="kg-card-markdown"><h1 id="1findingfileinformationusingextensions">1) Finding file information using extensions</h1>
<br>
A common way to analysis the detail of a file is using the extensions of the file. Extension is a set of characters at the end of the file name
separated by the final dot(.) from the filename.
<blockquote>
<img src="https://shubham0d.github.io/content/images/2017/12/file-types-.png.jpeg" alt="Finding file information using different methods"><p><strong>Example</strong>: In a file with name “<em>dolphin.jpg</em>”, dolphin is the name of file whereas jpg is the file extension which tells the file type is actually a <em>image/jpeg</em> file.</p>
</blockquote>
<h2 id="usingextensionsdetailtofindfileinfo">Using extensions detail to find file info</h2>
<p>In linux based systems the filetype info through extension is stored on location <em>/usr/share/misc/magic</em> as a structure whereas same information can be found on windows registry at <em>HKEYCLASSESROOT</em> subtree.<br>
<em>Given below is the part of linux filetype structure</em>:</p>
<pre><code>  text/html                             html htm shtml;
  text/css                              css;
  text/xml                              xml rss;
  image/gif                             gif;
  image/jpeg                            jpeg jpg;
  application/x-javascript              js;
  text/plain                            txt;
  text/x-component                      htc;
  text/mathml                           mml;
  image/png                             png;
  image/x-icon                          ico;
  image/x-jng                           jng;
  image/vnd.wap.wbmp                    wbmp;
  application/java-archive              jar war ear;
  application/mac-binhex40              hqx;
  application/pdf                       pdf;
  application/x-cocoa                   cco;
  application/x-java-archive-diff       jardiff;
  application/x-java-jnlp-file          jnlp;
  application/x-makeself                run;
  application/x-perl                    pl pm;
  application/x-pilot                   prc pdb;
  application/x-rar-compressed          rar;
  application/x-redhat-package-manager  rpm;
  application/x-sea                     sea;
  application/x-shockwave-flash         swf;
  application/x-stuffit                 sit;
  application/x-tcl                     tcl tk;
  application/x-x509-ca-cert            der pem crt;
  application/x-xpinstall               xpi;
  application/zip                       zip;
  application/octet-stream              deb;
  application/octet-stream              bin exe dll;
  application/octet-stream              dmg;
  application/octet-stream              eot;
  application/octet-stream              iso img;
  application/octet-stream              msi msp msm;
  audio/mpeg                            mp3;
  audio/x-realaudio                     ra;
  video/mpeg                            mpeg mpg;
  video/quicktime                       mov;
  video/x-flv                           flv;
  video/x-msvideo                       avi;
  video/x-ms-wmv                        wmv;
  video/x-ms-asf                        asx asf;
  video/x-mng                           mng;
</code></pre>
<p>Advantage of using these sources is reliability as they are stored by operating system default itself and its also easy to use and handle across different programs.<br>
The issue with getting dependent on file extension is that extensions are a convention that are not enforced by the file system or OS. A user can change a extension and the file can still be used by programs.</p>
<h1 id="2findingfileinformationusingmagicnumber">2) Finding file information using magic number</h1>
<p>Much reliable way to find any file details can be using Header signature of a file.<br>
Typically file header contains metadata about the file to help a software application validate the file content is correct or not, load the data and view or process the data. Header signature or also called magic number typically are at the start of the file and allows a program to initially determine if the file is valid by first checking presence of number.<br>
Often quoted example is JPEG byte sequence <em>0xFF 0xD8 0xFF 0xE0</em>, appear as the characters <em>ÿØÿà</em> when JPEG file viewed in a hex/ASCII editor.</p>
<p><img src="https://shubham0d.github.io/content/images/2017/12/xxd-2.png" alt="Finding file information using different methods"></p>
<p>Using these magic number has advantage over using file extension as these number produce accurate result of file type. Manipulating these number will result the file to be not identified by application that will process it.</p>
<h2 id="usingmagicnumbertofindfileinfo">Using magic number to find file info</h2>
<p>You can get hexadecimal magic number of a program using any hexeditor tool in linux or windows system. For example in linux system you can use xxd as you hex editor.</p>
<pre><code>$xxd filename
</code></pre>
<p>Once you find the magic number you can compare them with the magic numbers of different format.</p>
<blockquote>
<p>You can also use file command (which exatly done the same to find the file<br>
type using magic numbers).<br>
<img src="https://shubham0d.github.io/content/images/2017/12/fileCommand.png" alt="Finding file information using different methods"></p>
</blockquote>
<h1 id="3findingfileinformationbyanalysingthecontaininsidethefile">3) Finding file information by analysing the contain inside the file</h1>
<p>Most of the file we deal in real are text based(containing ASCII characters).<br>
A text based file can be analysed by looking at its content.For example for programming files we can look at the header at the starting of code to find the programming language used. All programing code has includes at the starting of program in their defined format or have shebang <em>‘#!/bin/program’</em> at the start.</p>
<pre><code>#include&lt;stduo.h&gt;                        C/C++
#!/bin/bash                              Bash executable file
#!/bin/sh                                sh executable
#!/bin/perl                              perl program
#!/bin/ruby                              ruby program
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;   xml file
etc
</code></pre>
<p>For configuration file we can look for the syntax type used by common<br>
formats like <em>yml</em>,<em>ini</em> or <em>xml</em>.</p>
<blockquote>
<p>For example we can look for name=value field in case of ini config files.</p>
</blockquote>
<p>These header are processed by programs to find how to treat these file or<br>
through which compiler to run these file. Hence they are mostly included in<br>
fix formatted files and we can use them to get desirable file info.</p>
</div>]]></content:encoded></item><item><title><![CDATA[How to boot linux iso without usb on corrupted bios of lenovo laptops]]></title><description><![CDATA[Grub2 have the capability to boot directly from iso file present in any of your hard drive storage. Using this feature most Linux distributions as well as popular rescue CDs can be booted directly from an ISO file.]]></description><link>https://shubham0d.github.io/how-to-boot-linux-iso-without-usb-on-corrupted-bios-of-lenovo-laptops/</link><guid isPermaLink="false">5a42a4586a450b0a8b4cb910</guid><category><![CDATA[Linux]]></category><category><![CDATA[Firmware]]></category><dc:creator><![CDATA[Shubham Dubey]]></dc:creator><pubDate>Tue, 26 Dec 2017 20:19:49 GMT</pubDate><media:content url="https://shubham0d.github.io/content/images/2017/12/137735i64B079D682B7AF5E.jpeg" medium="image"/><content:encoded><![CDATA[<div class="kg-card-markdown"><img src="https://shubham0d.github.io/content/images/2017/12/137735i64B079D682B7AF5E.jpeg" alt="How to boot linux iso without usb on corrupted bios of lenovo laptops"><p>Recent bug(<a href="//bugs.launchpad.net/ubuntu/+source/linux/+bug/1734147?lipi=urn%3Ali%3Apage%3Ad_flagship3_pulse_read%3BpVpEnVj0SW6pQWfu1cO1%2BA%3D%3D">link</a>) in ubuntu 17.10 has become a great pain for lenovo laptop users(also some acer and toshiba laptop models) as their bios get corrupted due some unexpected behavior of intel driver in linux kernel. Because of this bug the users are not able to change their bios settings anymore and even the most important part is that the USB booting is not possible anymore since USB is not recognized in boot options. If you are a distrohopper like me or you want to install or switch to another distribution then this bug can be your nightmare because <em><strong>you are stuck in using ubuntu only</strong></em>.</p>
<p><em>Let's not get terrified</em>, because their is alternative method to install linux distribution without using usb or any other external media. This method may also be useful for other distrohoppers who want to save time in creating bootable media and also want to save yourself from inserting usb on your system every time, to try live distributions.</p>
<h1 id="whatcausingtheissue">What causing the issue</h1>
<p>I am not expert on this but as mention in the bug description it is caused by <em>intel-spi-</em> drivers in the kernel which have altered some bios related code. Due to closed nature of intel bios it is difficult to find out what exactly has altered. It was mentioned by ubuntu developers that patch for this issue will save future system to get affected but already affected user have only way to solve this issue by changing their BIOS chip. So, those who are not ready to go for this solution but want to install another distribution can use below method.</p>
<h1 id="bootingdirectlyfromisopresentinharddrive">Booting directly from iso present in hard drive</h1>
<p><em>Grub2</em> have the capability to boot directly from iso file present in any of your hard drive storage. Using this feature most Linux distributions as well as popular rescue CDs can be booted directly from an ISO file.</p>
<h2 id="buthow">But How?</h2>
<br>
<ul>
<li>You need to download the iso of distribution you want to install and place it at any known location inside one of your partitions.</li>
</ul>
<p>For demonstration I am using pop!_os(<a href="https://system76.com/pop">link</a>) iso  and save it inside my <em>root(sda2)</em> partition inside folder <em>/home/hackintosh/iso/</em> .<br>
<img src="https://shubham0d.github.io/content/images/2017/12/isopath.png" alt="How to boot linux iso without usb on corrupted bios of lenovo laptops"></p>
<ul>
<li>First rename the file to any simple name (<em>pop.iso</em> in my case) to make things easier.</li>
<li>Now open the iso through any archive manager.</li>
<li>Go inside casper folder and view its contain.</li>
</ul>
<p><img src="https://shubham0d.github.io/content/images/2017/12/archiveview.png" alt="How to boot linux iso without usb on corrupted bios of lenovo laptops"></p>
<ul>
<li>The file with <em><strong>vmlinuz.efi</strong></em> or similar name is your kernel file and <em><strong>initrd.gz</strong></em>( or similar name) is your initial ramdisk whose name you require in next step.</li>
<li>Now open file <em>/etc/grub.d/40_custom</em> and add this menuentry at the end.</li>
</ul>
<pre><code>     menuentry &quot;Pop up&quot; {
     loopback loop (hd0,2)/home/hackintosh/iso/pop.iso
     linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename   /home/hackintoshiso/pop.iso noprompt noeject
     initrd (loop)/casper/initrd.gz
   }
</code></pre>
<blockquote>
<p>Here in <em>(hd0,2)</em> '0' represent my internal hard disk(sda) and '2' represent my partition number(sda2).</p>
</blockquote>
<blockquote>
<p>In front of linux entry is your kernel name vmlinuz.efi and in front of initrd is initrd.gz file.</p>
</blockquote>
<ul>
<li>Now save this file and run command <em>update-grub</em>.</li>
</ul>
<pre><code>$sudo update-grub #or sudo grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>
<p>Once the command complete you can reboot your system.</p>
<p>Inside the boot menu you will get a new entry named '<em>Pop up</em>' which you can select to boot.</p>
<p>You can run the distribution as Live(if supported) or install it. If you want to perform an installation from the same ISO, you'd need to unmount the ISO image first</p>
<pre><code>$sudo umount -l /isodevice
</code></pre>
<p>Now after knowing this you don't need bootable media anymore.<strong>Cheers!</strong></p>
</div>]]></content:encoded></item></channel></rss>